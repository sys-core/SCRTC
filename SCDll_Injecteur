__author__ = 'SYSCORE'
import sys
from ctypes import *

PAGE_EXECUTE_READWRITE     = 0x00000040
PROCESS_ALL_ACCESS =   (0x000F0000 | 0x00100000 | 0xFFF)
VIRTUAL_MEM        = (0x1000 | 0x2000)


kernel32   = windll.kernel32
pid        = sys.argv[1]
dll_path   = sys.argv[2]
dll_len    = len(dll_path)

h_process = kernel32.OpenProcess( PROCESS_ALL_ACCESS, False, int(pid))
if not h_process:
    print " [*] Ne peut acquerir le pid: %s" % pid
    sys.exit(0)
arg_address = kernel32.VirtualAllocEx(h_process, 0, dll_len, VIRTUAL_MEM, PAGE_EXECUTE_READWRITE)
written = c_int(0)
kernel32.WriteProcessMemory(h_process, arg_address, dll_path, dll_len, byref(written))

h_kernel32 = kernel32.GetModuleHandleA("kernel32.dll")
h_loadlib  = kernel32.GetProcAddress(h_kernel32, "loadLibraryA")

thread_id = c_ulong(0)
if not kernel32.CreateRemoteThread(h_process, None, 0, h_loadlib, arg_address, 0, byref(thread_id))
    print " [*] Echec d'injection du DLL. Sortie."
    sys.exit(0)



print " [*] Thread distant créé avec l'ID thread de: 0x%08% " % thread_id.value

